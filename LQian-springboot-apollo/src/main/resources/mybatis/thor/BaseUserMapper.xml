<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fjs.apollo.mapper.thor.BaseUserMapper">
    <resultMap type="com.fjs.apollo.entity.thor.BaseUser" id="BaseUserMap">
            <id property="id" column="id" />
            <result property="user_type" column="user_type" />
            <result property="user_id" column="user_id" />
            <result property="telephone" column="telephone" />
            <result property="name" column="name" />
            <result property="sex" column="sex" />
            <result property="residence" column="residence" />
            <result property="nick_name" column="nick_name" />
            <result property="portrait" column="portrait" />
            <result property="password" column="password" />
            <result property="gesture_password" column="gesture_password" />
            <result property="password_mode" column="password_mode" />
            <result property="hash_key" column="hash_key" />
            <result property="qq_open_id" column="qq_open_id" />
            <result property="open_id" column="open_id" />
            <result property="status" column="status" />
            <result property="im_user_id" column="im_user_id" />
            <result property="im_user_password" column="im_user_password" />
            <result property="last_login_time" column="last_login_time" />
            <result property="create_time" column="create_time" />
            <result property="last_update_time" column="last_update_time" />
            <result property="create_user" column="create_user" />
            <result property="last_update_user" column="last_update_user" />
            <result property="is_deleted" column="is_deleted" />
    </resultMap>

    <!--可重用的SQL代码段-->
    <sql id="userColumnId">
        base.id,
        base.user_type,
        base.user_id,
        base.telephone,
        base.name,
        base.sex,
        base.residence,
        base.nick_name,
        base.portrait,
        base.password,
        base.gesture_password,
        base.password_mode,
        base.hash_key,
        base.qq_open_id,
        base.open_id,
        base.status,
        base.im_user_id,
        base.im_user_password,
        base.last_login_time,
        base.create_time,
        base.last_update_time,
        base.create_user,
        base.last_update_user,
        base.is_deleted
    </sql>
    <select id="findNorUserByUser_id" resultMap="BaseUserMap">
        SELECT
        <include refid="userColumnId"/>
        FROM
        saas_mbr_user base
        WHERE
        1 = 1
        AND
        base.user_id = #{userId}
        AND base.user_type = 2
    </select>

    <insert id="addBaseUser" parameterType="com.fjs.apollo.entity.thor.BaseUser" useGeneratedKeys="true" keyProperty="id">
            insert into saas_mbr_user (user_type, user_id,
            telephone, name, sex,
            residence, nick_name, portrait,
            password, gesture_password, password_mode,
            hash_key, qq_open_id, open_id,
            status, im_user_id, im_user_password,
            last_login_time, create_time, last_update_time,
            create_user, last_update_user, is_deleted
            )
            values (#{user_type,jdbcType=INTEGER}, #{user_id,jdbcType=VARCHAR},
            #{telephone,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER},
            #{residence,jdbcType=VARCHAR}, #{nick_name,jdbcType=VARCHAR}, #{portrait,jdbcType=VARCHAR},
            #{password,jdbcType=CHAR}, #{gesture_password,jdbcType=CHAR}, #{password_mode,jdbcType=INTEGER},
            #{hash_key,jdbcType=VARCHAR}, #{qq_open_id,jdbcType=VARCHAR}, #{open_id,jdbcType=VARCHAR},
            #{status,jdbcType=INTEGER}, #{im_user_id,jdbcType=VARCHAR}, #{im_user_password,jdbcType=VARCHAR},
            #{last_login_time,jdbcType=TIMESTAMP}, #{create_time,jdbcType=TIMESTAMP}, #{last_update_time,jdbcType=TIMESTAMP},
            #{create_user,jdbcType=INTEGER}, #{last_update_user,jdbcType=INTEGER}, #{is_deleted,jdbcType=INTEGER}
            )
        </insert>
    <update id="updateLastLoginTime">
        update
        saas_mbr_user
        SET
        last_login_time = now()
        WHERE
        id=#{id}
    </update>
</mapper>