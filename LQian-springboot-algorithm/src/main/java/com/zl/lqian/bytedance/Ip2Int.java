package com.zl.lqian.bytedance;

public class Ip2Int {

    /**
     * 有一个技巧，就是 或运算。就是将每段的 int 值左移到恰当的位置后跟保存结果的 int 值进行或运算。
     * <p>
     * 以 255.255.255.255 这个地址为例，上面的或运算过程如下：
     * <p>
     * 00000000 00000000 00000000 00000000
     * 00000000 00000000 00000000 11111111
     * ------------或运算------------
     * 00000000 00000000 00000000 11111111
     * 00000000 00000000 11111111 00000000
     * ------------或运算------------
     * 00000000 00000000 11111111 11111111
     * 00000000 11111111 00000000 00000000
     * ------------或运算------------
     * 00000000 11111111 11111111 11111111
     * 11111111 00000000 00000000 00000000
     * -----------最终结果------------
     * 11111111 11111111 11111111 11111111
     *
     * @param ipString
     * @return
     */
    public static int ip2Int(String ipString) {
        // 取 ip 的各段
        String[] ipSlices = ipString.split("\\.");
        int rs = 0;
        for (int i = 0; i < ipSlices.length; i++) {
            // 将 ip 的每一段解析为 int，并根据位置左移 8 位
            int intSlice = Integer.parseInt(ipSlices[i]) << 8 * i;
            // 或运算
            rs = rs | intSlice;
        }
        return rs;
    }

}
